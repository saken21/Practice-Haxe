// Generated by Haxe 3.3.0
(function () { "use strict";
var Main = function() { };
Main.main = function() {
	window.onload = Main.init;
};
Main.init = function() {
	var w = window.innerWidth;
	var h = window.innerHeight;
	Main._meshes = [];
	Main._scene = new THREE.Scene();
	Main._camera = new THREE.PerspectiveCamera(50,w / h,.01,100);
	Main._renderer = new THREE.WebGLRenderer({ antialias : true, canvas : window.document.getElementById("canvas")});
	Main._renderer.setSize(w,h);
	Main._scene.add(Main._camera);
	var _g = 0;
	while(_g < 1000) {
		var i = _g++;
		Main.addScene();
	}
	Main._renderer.domElement.onmousemove = Main.onMousemove;
	window.requestAnimationFrame(Main.update);
};
Main.addScene = function() {
	var color = Math.floor(16777215 * Math.random());
	var geometry = new THREE.BoxGeometry(.05,.05,.05);
	var material = new THREE.MeshBasicMaterial({ color : new THREE.Color(color)});
	var mesh = new THREE.Mesh(geometry,material);
	mesh.position.set(10 * Main.getRandom(),10 * Main.getRandom(),0);
	Main._meshes.push(mesh);
	Main._scene.add(mesh);
};
Main.update = function(time) {
	window.requestAnimationFrame(Main.update);
	var _g = 0;
	var _g1 = Main._meshes;
	while(_g < _g1.length) {
		var mesh = _g1[_g];
		++_g;
		mesh.rotation.x += .05;
		mesh.rotation.y += .05;
		mesh.rotation.z += .05;
	}
	var rad = Main._mouseX / window.innerWidth * Math.PI * 2;
	Main._camera.position.set(Math.cos(rad),Math.tan(rad),Math.sin(rad));
	Main._camera.lookAt(new THREE.Vector3());
	Main._renderer.render(Main._scene,Main._camera);
};
Main.onMousemove = function(event) {
	Main._mouseX = event.clientX;
	Main._mouseY = event.clientY;
};
Main.getRandom = function() {
	return Math.random() - Math.random();
};
var three_renderers_Renderer = function() { };
Main.main();
})();
